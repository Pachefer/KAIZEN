{
  "customComponent": {
    "prefix": "cc",
    "body": [
      "'use client';",
      "",
      "import React from 'react'",
      "",
      "export const ${TM_FILENAME_BASE}: React.FC = () => {",
      "  return <div>${TM_FILENAME_BASE}</div>;",
      "};"
    ],
    "description": "create custom component"
  },
  "renderHeader": {
    "prefix": "rh",
    "body": [
      "const renderHeader = () => {",
      "  return <components.Header />;",
      "};"
    ],
    "description": "Рендерит шапку"
  },
  "renderContent": {
    "prefix": "rc",
    "body": [
      "const renderContent = () => {",
      "  return <main>Content</main>;",
      "};"
    ],
    "description": "Рендерит контент"
  },
  "renderButton": {
    "prefix": "rb",
    "body": [
      "const renderButton = () => {",
      "  return <components.Button label='this is button' href={'#'} />;",
      "};"
    ],
    "description": "Рендерит кнопку"
  },
  "useAppNavigate": {
    "prefix": "un",
    "body": [
      "const navigate = hooks.useAppNavigate();"
    ],
    "description": "Использует хук useAppNavigate"
  },
  "useStateSnippet": {
    "prefix": "useState",
    "body": [
      "const [${1:state}, ${2:setState}] = React.useState(${3:initialValue});"
    ],
    "description": "Создает состояние с помощью useState"
  },
  "renderBottomTabBar": {
    "prefix": "renderBottomTabBar",
    "body": [
      "const renderBottomTabBar = () => {",
      "  return <components.BottomTabBar />;",
      "};"
    ],
    "description": "Рендерит BottomTabBar компонент"
  },
  "typeProps": {
      "prefix": "typeProps",
      "body": [
        "type Props = {};",
      ],
      "description": "Создает тип Props"
    },
  "ic": {
    "prefix": "ic",
    "body": [
      "import {${1:components}} from '@/${1:components}';"
    ],
    "description": "Импортирует компонент"
  },
  "isvg": {
    "prefix": "svg",
    "body": [
      "import {${1:svg}} from '@/${1:assets/svg}';"
    ],
    "description": "Импортирует компонент"
  },
   "icn": {
    "prefix": "icn",
    "body": [
      "import {${1:constants}} from '@/constants';"
    ],
    "description": "Импортирует компонент"
  },
  "ii": {
    "prefix": "ii",
    "body": [
      "import {${1:items}} from '@/${1:items}';"
    ],
    "description": "Импортирует компонент"
  },
  "it": {
    "prefix": "it",
    "body": [
      "import {${1:types}} from '@/${1:types}';"
    ],
    "description": "Imports types"
  },
  "nextPage": {
    "prefix": "nx",
    "body": [
      "import Head from 'next/head';",
      "",
      "export default function Page() {",
      "  return <><Head><title>Page</title></Head></>",
      "};"
    ],
    "description": "Переходит на следующую страницу"
  },
  "is": {
    "prefix": "is",
    "body": ["import {stores} from '../stores';"],
    "description": "Импортирует компонент"
  },
  "ir": {
    "prefix": "ir",
    "body": ["import {Routes} from '../routes';"],
    "description": "Импортирует компонент"
  },
  "ih": {
    "prefix": "ih",
    "body": ["import {hooks} from '@/hooks';"],
    "description": "Импортирует компонент"
  },
   "nv": {
    "prefix": "nv",
    "body": ["const {navigate} = hooks.useRouter();"],
    "description": "Imports navigate from hooks"
  },
}